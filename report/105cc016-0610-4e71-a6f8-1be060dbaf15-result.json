{"name": "添加电力设备", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <scripts.test_meishan_project.TestAddDevice object at 0x000001FD29718670>\nadd_device = {'cases': [{'method': 'open_url', 'name': '打开网页', 'url': 'http://121.37.130.248'}, {'locator': '//*[text()=\"系统配置\"]', '...v/input', 'method': 'input_info', 'name': '设备名称', 'value': 'test'}, ...], 'description': '添加电力设备成功', 'title': '添加电力设备'}\n\n    @pytest.mark.run(order=1)\n    @allure.story(\"Add device\")  # 模块分组（如：登录成功、登录失败都在登录模块）\n    @pytest.mark.parametrize('add_device', read_yml(\"add_device\"))\n    def test_1add_device(self, add_device):\n        \"\"\"\n        测试添加设备\n        :param add_device:\n        :return:\n        \"\"\"\n        allure.dynamic.title(add_device[\"title\"])  # 动态获取yaml中的title\n        allure.description(add_device[\"description\"])  # 用例描述\n        test_cases = add_device[\"cases\"]\n        for cases in test_cases:\n            list_case = list(cases.values())\n            with allure.step(list_case[0]):  # 0在yaml文件中为name字段；1为方法名称；2为方法参数\n                func = getattr(self.base_action, list_case[1])\n                values = list_case[2:]\n                try:\n                    func(*values)\n                except Exception as e:\n                    png = self.base_action.driver.get_screenshot_as_png()\n                    name = time.strftime('%Y-%m-%d %H:%M:%S')+list_case[0]\n                    allure.attach(png, name, allure.attachment_type.PNG)\n>                   raise e\n\nscripts\\test_meishan_project.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nscripts\\test_meishan_project.py:48: in test_1add_device\n    func(*values)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tools.base_action.BaseAction object at 0x000001FD29718730>, locator = '//*[text()=\"test\"]', text = 'abcd'\n\n    def assert_info(self, locator=None, text=None):\n        if text is not None:\n            try:\n>               assert text == str(self.find_element(locator).text)\nE               AssertionError\n\ntools\\base_action.py:102: AssertionError"}, "description": "\n        测试添加设备\n        :param add_device:\n        :return:\n        ", "steps": [{"name": "打开网页", "status": "passed", "start": 1609320155306, "stop": 1609320162453}, {"name": "系统配置", "status": "passed", "start": 1609320162453, "stop": 1609320162500}, {"name": "一次设备", "status": "passed", "start": 1609320162500, "stop": 1609320162605}, {"name": "添加按钮", "status": "passed", "start": 1609320162605, "stop": 1609320162952}, {"name": "设备类型", "status": "passed", "start": 1609320162952, "stop": 1609320163287}, {"name": "设备名称", "status": "passed", "start": 1609320163287, "stop": 1609320163404}, {"name": "设备编码", "status": "passed", "start": 1609320163404, "stop": 1609320163514}, {"name": "电压等级", "status": "passed", "start": 1609320163514, "stop": 1609320163584}, {"name": "设备名称", "status": "passed", "start": 1609320163584, "stop": 1609320163678}, {"name": "选择厂家", "status": "passed", "start": 1609320163678, "stop": 1609320163831}, {"name": "投运日期", "status": "passed", "start": 1609320163831, "stop": 1609320163969}, {"name": "保存按钮", "status": "passed", "start": 1609320163969, "stop": 1609320164028}, {"name": "sleep", "status": "passed", "start": 1609320164028, "stop": 1609320166029}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\YF2010104010\\Desktop\\DDTWebTest\\scripts\\test_meishan_project.py\", line 53, in test_1add_device\n    raise e\n  File \"C:\\Users\\YF2010104010\\Desktop\\DDTWebTest\\scripts\\test_meishan_project.py\", line 48, in test_1add_device\n    func(*values)\n  File \"C:\\Users\\YF2010104010\\Desktop\\DDTWebTest\\tools\\base_action.py\", line 102, in assert_info\n    assert text == str(self.find_element(locator).text)\n"}, "attachments": [{"name": "2020-12-30 17:22:46断言", "source": "21eb3faf-dc80-45eb-8714-18362a0294b1-attachment.png", "type": "image/png"}], "start": 1609320166029, "stop": 1609320166482}], "parameters": [{"name": "add_device", "value": "{'title': '添加电力设备', 'description': '添加电力设备成功', 'cases': [{'name': '打开网页', 'method': 'open_url', 'url': 'http://121.37.130.248'}, {'name': '系统配置', 'method': 'click', 'locator': '//*[text()=\"系统配置\"]'}, {'name': '一次设备', 'method': 'click', 'locator': '//*[text()=\"一次设备\"]'}, {'name': '添加按钮', 'method': 'click', 'locator': '//*[text()=\"添加设备\"]'}, {'name': '设备类型', 'method': 'select_info', 'locator': '//*[@id=\"app\"]/section/section/main/section/main/div/div[2]/div/div[1]/div/div/input', 'select_value': '(//*[text()=\"主变压器\"])[2]'}, {'name': '设备名称', 'method': 'input_info', 'locator': '//*[@id=\"app\"]/section/section/main/section/main/div/div[2]/div/div[2]/div/input', 'value': 'test'}, {'name': '设备编码', 'method': 'input_info', 'locator': '//*[@id=\"app\"]/section/section/main/section/main/div/div[2]/div/div[3]/div/input', 'value': 10000}, {'name': '电压等级', 'method': 'input_info', 'locator': '//*[@id=\"app\"]/section/section/main/section/main/div/div[2]/div/div[4]/div/input', 'value': 2}, {'name': '设备名称', 'method': 'input_info', 'locator': '//*[@id=\"app\"]/section/section/main/section/main/div/div[2]/div/div[2]/div/input', 'value': 'test'}, {'name': '选择厂家', 'method': 'select_info', 'locator': '//*[@id=\"app\"]/section/section/main/section/main/div/div[2]/div/div[5]/div/div/input', 'select_value': '//*[text()=\"赛康\"]'}, {'name': '投运日期', 'method': 'input_info', 'locator': '//*[@id=\"app\"]/section/section/main/section/main/div/div[2]/div/div[6]/div/input', 'select_value': '2020-12-11'}, {'name': '保存按钮', 'method': 'click', 'locator': '//*[@id=\"app\"]/section/section/main/section/main/div/div[3]/div[4]'}, {'name': 'sleep', 'method': 'sleep_time', 'value': 2}, {'name': '断言', 'method': 'assert_info', 'locator': '//*[text()=\"test\"]', 'value': 'abcd'}]}"}], "start": 1609320155306, "stop": 1609320166482, "uuid": "77205a82-60db-4caa-bd37-5f27ec637d04", "historyId": "16f4c6a193280d0d0b3c90df6bf357c8", "testCaseId": "e4a299f6cfa48e5d4ec56bfd36d4bf7a", "fullName": "scripts.test_meishan_project.TestAddDevice#test_1add_device", "labels": [{"name": "story", "value": "Add device"}, {"name": "feature", "value": "Mei Shan Project"}, {"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_meishan_project"}, {"name": "subSuite", "value": "TestAddDevice"}, {"name": "host", "value": "bin"}, {"name": "thread", "value": "170784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_meishan_project"}]}